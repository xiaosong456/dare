<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:cache="http://www.springframework.org/schema/cache"
       xmlns:task="http://www.springframework.org/schema/task"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-3.1.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
	http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
	http://www.springframework.org/schema/task
    http://www.springframework.org/schema/task/spring-task-3.1.xsd" >

    <!--定时任务注解-->
    <task:annotation-driven/>



    <!-- 启用spring mvc 注解 -->
    <context:annotation-config />

    <!-- 设置使用注解的类所在的jar包 -->
    <context:component-scan base-package="com.grand"></context:component-scan>

    <!-- 完成请求和注解POJO的映射 -->
    <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter" />


    <!--自动扫描mybatis接口文件-->


    <!-- add by xyq 2017-12-06 -->
    <!--<bean id="vendorProperties" class="org.springframework.beans.factory.config.PropertiesFactoryBean">-->
        <!--<property name="properties">-->
            <!--<props>-->
                <!--<prop key="DB2">db2</prop>-->
                <!--<prop key="Oracle">oracle</prop>-->
                <!--<prop key="MySQL">mysql</prop>-->
            <!--</props>-->
        <!--</property>-->
    <!--</bean>-->
    <!--<bean id="databaseIdProvider" class="org.apache.ibatis.mapping.VendorDatabaseIdProvider">-->
        <!--<property name="properties" ref="vendorProperties"/>-->
    <!--</bean>-->



    <!-- 数据字典 -->
    <!--<bean id="initBean" class="com.grand.startup.SystemStartBean" init-method="init"></bean>-->
    <!--<bean id="initReport" class="com.grand.startup.ReportStartBean" init-method="init"></bean>-->

    <!-- 配置数据源 -->
    <!--<bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
       <property name="jndiName" value="java:comp/env/jdbc/pwmsDataSrc"></property>
   </bean>
-->




    <!-- 定义易受环境影响的变量 -->
    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE" />
        <property name="ignoreResourceNotFound" value="true" />
        <property name="locations">
            <list>
                <!-- 标准配置 -->
                <value>classpath:/application.properties</value>
            </list>
        </property>
    </bean>


    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <!-- 基本属性 url、user、password -->
        <property name="driverClassName" value="${jdbc.driverClassName2}" />
        <property name="url" value="${jdbc.url2}" />
        <property name="username" value="${jdbc.userDS.username2}" />
        <property name="password" value="${jdbc.userDS.password2}" />



        <!--   配置初始化大小、最小、最大   -->
        <property name="initialSize" value="1" />
        <property name="minIdle" value="1" />
        <property name="maxActive" value="20" />

        <!--  配置获取连接等待超时的时间   -->
        <property name="maxWait" value="60000" />

        <!--  配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒   -->
        <property name="timeBetweenEvictionRunsMillis" value="60000" />

        <!--  配置一个连接在池中最小生存的时间，单位是毫秒   -->
          <property name="minEvictableIdleTimeMillis" value="300000" />

         <property name="validationQuery" value="SELECT 'x' from dual" />
         <property name="testWhileIdle" value="true" />
         <property name="testOnBorrow" value="false" />
         <property name="testOnReturn" value="false" />
        <!-- 打开PSCache，并且指定每个连接上PSCache的大小   -->
        <property name="poolPreparedStatements" value="true" />
        <property name="maxPoolPreparedStatementPerConnectionSize" value="20" />

        <!--  配置监控统计拦截的filters，去掉后监控界面sql无法统计   -->
        <property name="filters" value="stat" />

    </bean>
    <!-- luweibin end -->

    <!--<bean id="ds" class="com.alibaba.druid.pool.DruidDataSource">-->
        <!--<property name="basicDataSource" ref="dataSource"></property>-->
    <!--</bean>-->




    <!-- 配置sqlSessionFactory -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- add by xyq 2017-12-06 -->
        <!--<property name="databaseIdProvider" ref="databaseIdProvider" />-->
        <property name="dataSource" ref="dataSource"></property>
        <property name="configLocation" value="classpath:mybatis-config.xml"></property>
    </bean>


    <!-- 配置事务 -->
    <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"></property>
    </bean>

    <!--使用基于注解方式配置事务 -->
    <tx:annotation-driven transaction-manager="txManager" proxy-target-class="true"/>

    <!-- 通知 -->
    <tx:advice id="txAdvice" transaction-manager="txManager">
        <tx:attributes>
            <!-- 传播行为 -->
            <tx:method name="save*" propagation="REQUIRED"/>
            <tx:method name="delete*" propagation="REQUIRED"/>
            <tx:method name="insert*" propagation="REQUIRED"/>
            <tx:method name="update*" propagation="REQUIRED"/>
            <tx:method name="find*" propagation="SUPPORTS" read-only="true"/>
            <tx:method name="get*" propagation="SUPPORTS" read-only="true"/>
            <tx:method name="select*" propagation="SUPPORTS" read-only="true"/>
        </tx:attributes>
    </tx:advice>
    <!-- aop -->
    <!--<aop:config>-->
        <!--<aop:advisor advice-ref="txAdvice" pointcut="execution(* com.yihuisoft.isolution.service.*.*.*(..))"/>-->
    <!--</aop:config>-->

    <!-- 开启自动扫描 -->
    <context:annotation-config/>
    <context:component-scan base-package="com.grand" use-default-filters="false">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Service" />
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Repository" />
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Component" />
    </context:component-scan>

    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.grand" />
        <!-- add by xyq 2017-12-06 -->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
    </bean>

</beans>